Task 1


project_directory/
|_ main.tf
|_ variables.tf
|_ modules/
   |_ instances/
      |_ instances.tf
      |_ outputs.tf
      |_ variables.tf
   |_ storage/
      |_ storage.tf
      |_ outputs.tf
      |_ variables.tf


------------------------------------------------------------------------------------------------------------------------------------------------------------------


Go To variable.tf and paste following content:


variable "region" {
  description = "The region where the resources will be deployed"
  default     = "us-central1"
}

variable "zone" {
  description = "The zone within the region where the resources will be deployed"
  default     = "us-central1-a"
}

variable "project_id" {
  description = "The ID of the Google Cloud project"
  default     = "REPLACE_PROJECT_ID"
}


------------------------------------------------------------------------------------------------------------------------------------------------------------------

provider "google" {
  project     = var.project_id
  region      = var.region
  zone        = var.zone

  credentials = file("path/to/credentials.json")  # Add service account credentials
  alias       = "my-google-cloud"  # Add an alias for the provider
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------------

Run in cloudshell

terraform init

-----------------------------------------------------------------------------------------------------------------------------------------------------------------

Go to modules/instances/instances.tf then paste following content



resource "google_compute_instance" "tf-instance-1" {
  name         = "tf-instance-1"
  machine_type = "n1-standard-1"
  zone         = "<****Add_Zone****>"

  boot_disk {
    initialize_params {
      image = "debian-cloud/debian-10"
    }
  }

  network_interface {
 network = "default"
  }
  metadata_startup_script = <<-EOT
        #!/bin/bash
    EOT
  allow_stopping_for_update = true
}

resource "google_compute_instance" "tf-instance-2" {
  name         = "tf-instance-2"
  machine_type = "n1-standard-1"
  zone         =  "<****Add_Zone****>"

  boot_disk {
    initialize_params {
      image = "debian-cloud/debian-10"
    }
  }

  network_interface {
 network = "default"
  }
  metadata_startup_script = <<-EOT
        #!/bin/bash
    EOT
  allow_stopping_for_update = true
}


-----------------------------------------------------------------------------------------------------------------------------------------------------------------

Run in cloud shell

terraform import module.instances.google_compute_instance.tf-instance-1 <Instance ID - 1>

terraform import module.instances.google_compute_instance.tf-instance-2 <Instance ID - 2>

terraform plan
terraform apply

-----------------------------------------------------------------------------------------------------------------------------------------------------------------

Add following to storage.tf



resource "google_storage_bucket" "storage-bucket" {
  name          = "<****YOUR-BUCKET****>"
  location      = "US"
  force_destroy = true
  uniform_bucket_level_access = true
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------------


Add following to main.tf

module "storage" {
  source     = "./modules/storage"
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------------

Run cloud shell : 

terraform init
terraform apply

-----------------------------------------------------------------------------------------------------------------------------------------------------------------

Make change at start in main.tf


terraform {
  backend "gcs" {
    bucket  = "<****REPLACE YOUR BUCKET****>"
 prefix  = "terraform/state"
  }
  required_providers {
    google = {
      source = "hashicorp/google"
      version = "4.53.0"
    }
  }
}

---------------------------------------------------------------------------------------------------------------------------------------------------------------

run in cloud shell

terraform init

---------------------------------------------------------------------------------------------------------------------------------------------------------------

Add following to instance.tf


resource "google_compute_instance" "****Instance Name****" {
  name         = "****Instance Name****"
  machine_type = "n1-standard-2"
  zone         = "<****Add_Zone****>"

  boot_disk {
    initialize_params {
      image = "debian-cloud/debian-10"
    }
  }

  network_interface {
 network = "default"
  }
  metadata_startup_script = <<-EOT
        #!/bin/bash
    EOT
  allow_stopping_for_update = true
}

---------------------------------------------------------------------------------------------------------------------------------------------------------------


Run cloud shell : 

terraform init
terraform apply

terraform taint module.instances.google_compute_instance.****Instance_name****


terraform plan
terraform apply


Go to instance.tf & remove instance 3

terraform apply


---------------------------------------------------------------------------------------------------------------------------------------------------------------


Task 6:

Go to main.tf


module "vpc" {
    source  = "terraform-google-modules/network/google"
    version = "~> 6.0.0"

    project_id   = "****PROJECT_ID****"
    network_name = "****VPC_NAME****"
    routing_mode = "GLOBAL"

    subnets = [
        {
            subnet_name           = "subnet-01"
            subnet_ip             = "10.10.10.0/24"
            subnet_region         = "****us-central1****"
        },
        {
            subnet_name           = "subnet-02"
            subnet_ip             = "10.10.20.0/24"
            subnet_region         = "****us-central1****"
            subnet_private_access = "true"
            subnet_flow_logs      = "true"
            description           = "This subnet has a description"
        },
    ]
}

---------------------------------------------------------------------------------------------------------------------------------------------------------------

run cloud shell :
terraform init
terraform apply

---------------------------------------------------------------------------------------------------------------------------------------------------------------



Go to Instance.tf and Replace everything with following:



resource "google_compute_instance" "tf-instance-1"{
  name         = "tf-instance-1"
  machine_type = "n1-standard-2"
  zone         = <****var.zone****>

  boot_disk {
    initialize_params {
      image = "debian-cloud/debian-10"
    }
  }

  network_interface {
    network = "****VPC_NAME****"
     subnetwork = "subnet-01"
  }
  metadata_startup_script = <<-EOT
        #!/bin/bash
    EOT
  allow_stopping_for_update = true
}

resource "google_compute_instance" "tf-instance-2"{
  name         = "tf-instance-2"
  machine_type = "n1-standard-2"
  zone         = <****var.zone****>

  boot_disk {
    initialize_params {
      image = "debian-cloud/debian-10"
    }
  }

  network_interface {
    network = "****VPC_NAME*****"
     subnetwork = "subnet-02"
  }

  metadata_startup_script = <<-EOT
        #!/bin/bash
    EOT
  allow_stopping_for_update = true
}



module "vpc" {
    source  = "terraform-google-modules/network/google"
    version = "~> 6.0.0"

    project_id   = "*****PROJECT_ID****"
    network_name = "****VPC_NAME*****"
    routing_mode = "GLOBAL"

    subnets = [
        {
            subnet_name           = "subnet-01"
            subnet_ip             = "10.10.10.0/24"
            subnet_region         = "us-central1"
        },
        {
            subnet_name           = "subnet-02"
            subnet_ip             = "10.10.20.0/24"
            subnet_region         = "us-central1"
            subnet_private_access = "true"
            subnet_flow_logs      = "true"
            description           = "This subnet has a description"
        },
    ]
}



--------------------------------------------------------------------------------------------------------------------------------------------------------------


run cloud_shell 

terraform init
terraform apply

--------------------------------------------------------------------------------------------------------------------------------------------------------------


Go to main.tf and add the following 



resource "google_compute_firewall" "tf-firewall"{
  name    = "tf-firewall"
 network = "projects/<*****PROJECT_ID*****>/global/networks/<****VPC_Name****>"

  allow {
    protocol = "tcp"
    ports    = ["80"]
  }

  source_tags = ["web"]
  source_ranges = ["0.0.0.0/0"]
}

--------------------------------------------------------------------------------------------------------------------------------------------------------------



run cloud shell

terraform init
terraform apply

--------------------------------------------------------------------------------------------------------------------------------------------------------------

